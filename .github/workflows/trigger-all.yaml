name: Trigger All Workflows

on:
  workflow_dispatch:

jobs:
  trigger-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger other workflows
        uses: actions/github-script@v6
        env:
          PAT: ${{ secrets.TRIGGER_ALL_PAT }}
        with:
          script: |
            try {
              // List all workflows in the repository
              const workflows = await github.rest.actions.listRepoWorkflows({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });

              // Filter out the current workflow (this one)
              const otherWorkflows = workflows.data.workflows.filter(
                workflow => workflow.name !== 'Trigger All Workflows'
              );

              // Trigger each workflow individually
              for (const workflow of otherWorkflows) {
                try {
                  console.log(`Triggering workflow: ${workflow.name}`);
                  await github.rest.actions.createWorkflowDispatch({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    workflow_id: workflow.id,
                    ref: 'main', // Change to your default branch if not main
                    headers: {
                      authorization: `Bearer ${process.env.PAT}`
                    }
                  });
                  console.log(`Successfully triggered: ${workflow.name}`);
                } catch (error) {
                  console.error(`Failed to trigger workflow ${workflow.name}: ${error}`);
                  // Mark the step as failed but continue triggering others
                  core.setFailed(`Failed to trigger ${workflow.name}`);
                }
              }

              console.log(`Triggered ${otherWorkflows.length} workflows`);
            } catch (error) {
              console.error('Unexpected error:', error);
              core.setFailed('Unexpected error: ' + error.message);
            }