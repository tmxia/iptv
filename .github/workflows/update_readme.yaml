name: Update README

on:
  push:
    paths:
      - 'version.txt'
  schedule:
    - cron: '0 * * * *'  # 每小时自动检查一次
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Check for README.md
        id: check-readme
        run: |
          if [ ! -f README.md ]; then
            echo "README.md not found, creating one"
            echo "# Project Versions" > README.md
            echo "<!-- VERSION_TABLE_START -->" >> README.md
            echo "| 文件名称 | 版本号 | 更新日期 |" >> README.md
            echo "|----------|--------|----------|" >> README.md
            echo "<!-- VERSION_TABLE_END -->" >> README.md
            echo "readme_created=true" >> $GITHUB_OUTPUT
          else
            echo "readme_created=false" >> $GITHUB_OUTPUT
          fi

      - name: Update README
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi
          
          # 获取仓库信息
          REPO_NAME="${{ github.repository }}"
          BASE_URL="https://github.com/${REPO_NAME}/raw/main/apk/"
          
          # 生成包含三列的新表格，按日期倒序排列
          echo "## 应用版本信息" > table.md
          echo "| 文件名称 | 版本号 | 更新日期 |" >> table.md
          echo "|----------|--------|----------|" >> table.md
          
          # 解析version.txt，按日期倒序排序，并为文件名添加超链接
          jq -r --arg base_url "$BASE_URL" '
            to_entries | 
            map({
              key: .key, 
              version: (.value | split(",")[0]), 
              date: (.value | split(",")[1]),
              url: ("\($base_url)" + (.key | @uri))  # 对文件名进行URL编码
            }) | 
            sort_by(.date) | reverse[] | 
            "| [\(.key)](\(.url)) | \(.version) | \(.date) |"
          ' version.txt >> table.md

          # 更新README.md
          awk -v new="$(cat table.md)" '
            /<!-- VERSION_TABLE_START -->/ {print; print new; skip=1}
            /<!-- VERSION_TABLE_END -->/ {skip=0}
            skip {next} {print}
          ' README.md > tmp && mv tmp README.md

          rm table.md

      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git add -A
            git commit -m "Update version table with download links [skip ci]"
            git push
          fi

  cleanup_self:
    name: Cleanup Workflow History
    runs-on: ubuntu-latest
    needs: [update-readme]
    if: ${{ always() }}
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          keep_minimum_runs: 0
          retain_days: 0
          delete_workflow_pattern: "Update README"
          repository: ${{ github.repository }}