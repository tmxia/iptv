name: Real-time README Updater

on:
  push:
    paths:
      - 'version.txt'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate version.txt
        id: validate-version
        run: |
          if [ ! -f version.txt ]; then
            echo "::error::version.txt not found"
            exit 1
          fi
          
          if ! jq empty version.txt 2>/dev/null; then
            echo "::error::Invalid JSON in version.txt"
            exit 1
          fi
          
          if [ $(jq -e 'length == 0' version.txt) = "true" ]; then
            echo "::warning::Empty version.txt"
            echo "skip_update=true" >> $GITHUB_OUTPUT
          else
            echo "skip_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare README
        if: ${{ steps.validate-version.outputs.skip_update == 'false' }}
        run: |
          if [ ! -f README.md ]; then
            echo "# 应用版本列表" > README.md
            echo "| 文件名称 | 版本号 | 更新日期 |" >> README.md
            echo "|----------|--------|----------|" >> README.md
            echo "<!-- VERSION_TABLE -->" >> README.md
          fi
          
          if ! grep -q "<!-- VERSION_TABLE -->" README.md; then
            echo "<!-- VERSION_TABLE -->" >> README.md
          fi

      - name: Generate and update table
        if: ${{ steps.validate-version.outputs.skip_update == 'false' }}
        run: |
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"
          BASE_URL="https://raw.githubusercontent.com/${REPO}/${BRANCH}/apk/"
          
          jq -r --arg base_url "$BASE_URL" '
            to_entries | sort_by(.value | split(",")[1]) | reverse | .[] |
            "| [\(.key)](\($base_url + (.key | @uri))) | \(.value | split(",")[0]) | \(.value | split(",")[1]) |"
          ' version.txt > table_content.txt
          
          awk '
            BEGIN { found = 0; printed = 0 }
            /<!-- VERSION_TABLE -->/ {
              if (!found) {
                found = 1
                print
                print "| 文件名称 | 版本号 | 更新日期 |"
                print "|----------|--------|----------|"
                while (getline line < "table_content.txt") {
                  print line
                }
                close("table_content.txt")
                printed = 1
                while (getline) {
                  if (/<!-- VERSION_TABLE -->/) {
                    print
                    break
                  }
                }
              } else {
                print
              }
              next
            }
            { print }
            END {
              if (!found) {
                print "<!-- VERSION_TABLE -->"
                print "| 文件名称 | 版本号 | 更新日期 |"
                print "|----------|--------|----------|"
                while (getline line < "table_content.txt") {
                  print line
                }
                close("table_content.txt")
                print "<!-- VERSION_TABLE -->"
              } else if (!printed) {
                print "<!-- VERSION_TABLE -->"
              }
            }
          ' README.md > README.tmp
          
          mv README.tmp README.md
          rm table_content.txt
          echo "Updated README.md"

      - name: 提交更改
        if: ${{ steps.validate-version.outputs.skip_update == 'false' }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git pull origin ${{ github.ref_name }}
          git add README.md
          
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "📚 自动更新版本表格 [skip ci]"
            git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref_name }}
          fi

      - name: Verify update
        if: ${{ steps.validate-version.outputs.skip_update == 'false' }}
        run: |
          # 直接检查每个条目是否存在于README中
          missing_entries=0
          total_entries=0
          
          # 生成预期的条目内容
          jq -r '
            to_entries[] | 
            "| [\(.key)]"
          ' version.txt > expected_entries.txt
          
          # 检查README中是否包含每个条目
          while IFS= read -r entry_pattern; do
            ((total_entries++))
            if ! grep -qF "$entry_pattern" README.md; then
              echo "::error::找不到条目: $entry_pattern"
              ((missing_entries++))
            fi
          done < expected_entries.txt
          
          rm expected_entries.txt
          
          if [ "$missing_entries" -eq 0 ]; then
            echo "验证成功! 所有 $total_entries 个条目已正确显示"
          else
            echo "::error::$missing_entries/$total_entries 个条目缺失或格式不正确"
            exit 1
          fi

  cleanup_self:
    name: Cleanup Workflow History
    runs-on: ubuntu-latest
    needs: [update-readme]
    if: ${{ always() }}
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          keep_minimum_runs: 2
          retain_days: 1
          delete_workflow_pattern: "Real-time README Updater"
          repository: ${{ github.repository }}