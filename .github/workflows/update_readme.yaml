name: Update README

on:
  push:
    paths:
      - 'version.txt'
  schedule:
    - cron: '0 * * * *'  # 每小时自动检查一次
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Validate version.txt
        id: validate-version
        run: |
          if [ ! -f version.txt ]; then
            echo "::warning::version.txt not found"
            echo "skip_update=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 检查文件是否为有效JSON
          if ! jq empty version.txt 2>/dev/null; then
            echo "::error::version.txt contains invalid JSON"
            exit 1
          fi
          
          # 检查是否有有效数据
          if [ $(jq -e 'length > 0' version.txt) != "true" ]; then
            echo "::warning::version.txt is empty"
            echo "skip_update=true" >> $GITHUB_OUTPUT
          else
            echo "skip_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare README
        id: prepare-readme
        run: |
          # 创建README（如果不存在）
          if [ ! -f README.md ]; then
            echo "Creating new README.md"
            echo "# Project Versions" > README.md
            echo "<!-- VERSION_TABLE_START -->" >> README.md
            echo "| 文件名称 | 版本号 | 更新日期 |" >> README.md
            echo "|----------|--------|----------|" >> README.md
            echo "<!-- VERSION_TABLE_END -->" >> README.md
            echo "readme_created=true" >> $GITHUB_OUTPUT
          else
            echo "readme_created=false" >> $GITHUB_OUTPUT
          fi
          
          # 确保标记存在
          if ! grep -q "<!-- VERSION_TABLE_START -->" README.md || ! grep -q "<!-- VERSION_TABLE_END -->" README.md; then
            echo "::warning::Adding missing markers to README.md"
            # 直接在文件末尾添加缺失的标记
            echo "" >> README.md
            echo "<!-- VERSION_TABLE_START -->" >> README.md
            echo "| 文件名称 | 版本号 | 更新日期 |" >> README.md
            echo "|----------|--------|----------|" >> README.md
            echo "<!-- VERSION_TABLE_END -->" >> README.md
            echo "markers_added=true" >> $GITHUB_OUTPUT
          else
            echo "markers_added=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        if: ${{ steps.validate-version.outputs.skip_update == 'false' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Update README
        if: ${{ steps.validate-version.outputs.skip_update == 'false' }}
        run: |
          # 获取仓库信息
          REPO_NAME="${{ github.repository }}"
          BASE_URL="https://github.com/${REPO_NAME}/raw/main/apk/"
          
          # 生成新表格内容
          TABLE_CONTENT=$(jq -r --arg base_url "$BASE_URL" '
            to_entries | 
            map({
              key: .key, 
              version: (.value | split(",")[0]), 
              date: (.value | split(",")[1]),
              url: ("\($base_url)" + (.key | @uri))
            }) | 
            sort_by(.date) | reverse[] | 
            "| [\(.key)](\(.url)) | \(.version) | \(.date) |"
          ' version.txt)
          
          # 生成完整的表格
          FULL_TABLE="| 文件名称 | 版本号 | 更新日期 |\n|----------|--------|----------|\n$TABLE_CONTENT"
          
          # 更新README.md - 使用简单的替换方法
          START_MARKER="<!-- VERSION_TABLE_START -->"
          END_MARKER="<!-- VERSION_TABLE_END -->"
          
          # 删除旧表格内容
          sed -i "/$START_MARKER/,/$END_MARKER/{//!d;}" README.md
          
          # 插入新表格内容
          sed -i "/$START_MARKER/a $TABLE_CONTENT" README.md
          
          echo "README updated successfully"

      - name: Commit changes
        if: ${{ steps.validate-version.outputs.skip_update == 'false' }}
        run: |
          # 检查是否有实际变更
          if git diff --exit-code --quiet README.md; then
            echo "No changes to commit"
          else
            git config user.name "github-actions"
            git config user.email "actions@users.noreply.github.com"
            git add README.md
            git commit -m "📚 Update version table [skip ci]"
            git push
          fi

  cleanup_self:
    name: Cleanup Workflow History
    runs-on: ubuntu-latest
    needs: [update-readme]
    if: ${{ always() }}
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          keep_minimum_runs: 0
          retain_days: 0
          delete_workflow_pattern: "Update README"
          repository: ${{ github.repository }}